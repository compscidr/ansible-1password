name: CI
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
    types: [opened, synchronize, reopened]

jobs:
  ansible-lint:
    name: Ansible Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'
      - name: Install ansible-lint
        run: |
          python -m pip install --upgrade pip
          pip install ansible-lint
      - name: Run ansible-lint
        run: ansible-lint .
          
  molecule-test:
    name: Molecule Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'
          
      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('molecule/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r molecule/requirements.txt
          
      - name: Install required Ansible collections
        run: |
          ansible-galaxy collection install community.docker --force
          
      - name: Run molecule tests
        run: molecule test
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'

  macos-test:
    name: macOS Tests
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'
          
      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible-core
          
      - name: Install required Ansible collections
        run: |
          ansible-galaxy collection install community.general
          
      - name: Install collection from source
        run: |
          mkdir -p ~/.ansible/collections/ansible_collections/compscidr
          cp -r . ~/.ansible/collections/ansible_collections/compscidr/onepassword
          
      - name: Run playbook on macOS
        run: |
          ansible-playbook playbook.yml -i localhost, --connection=local
        env:
          ANSIBLE_FORCE_COLOR: '1'
          
      - name: Verify 1Password CLI installation
        run: |
          which op
          op --version
          
      - name: Verify Chrome extension policy on macOS
        run: |
          if [ -f "/Library/Managed Preferences/com.google.Chrome.plist" ]; then
            echo "Chrome policy file exists"
            plutil -p "/Library/Managed Preferences/com.google.Chrome.plist" || echo "Could not read plist"
          else
            echo "Chrome policy file not found"
          fi
          
      - name: Verify Firefox extension policy on macOS
        run: |
          if [ -f "/Applications/Firefox.app/Contents/Resources/distribution/policies.json" ]; then
            echo "Firefox policy file exists"
            cat "/Applications/Firefox.app/Contents/Resources/distribution/policies.json"
          else
            echo "Firefox policy file not found (Firefox may not be installed)"
          fi
          
      - name: Verify Safari extension (bundled with 1Password)
        run: |
          if [ -d "/Applications/1Password.app" ]; then
            echo "1Password app installed (includes Safari extension)"
            ls -la /Applications/1Password.app/Contents/PlugIns/ || echo "No PlugIns directory"
          else
            echo "1Password app not found"
          fi
